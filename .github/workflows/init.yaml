name: Ka0s Init

on:
  workflow_dispatch:
    inputs:
      kaos-issue-id:
        description: 'Issue ID'
        default: ""
        required: true
      kaos-involved-file:
        description: 'Involved Files to process'
        default: ""
        required: true

permissions:
  contents: write
  actions: write
  issues: write
  pull-requests: write

env:
  KAOS_MODULE: "[Ka0S] INIT"
  GH_TOKEN: ${{ secrets.KAOS_TOKEN }}
  
jobs:
  kaos-init-process:
    runs-on: 
      group: kaos-init
    env:
      GH_TOKEN: ${{ secrets.KAOS_TOKEN }} 
      BRANCH_NAME: ${{ github.ref }}
      USER_NAME: ${{ github.actor.name}}
      USER_EMAIL: ${{ github.actor.email }}
      PATH_RESUME: "core/results/"
    steps:
      - id: repo # Check out the repository to get information of the commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_TOKEN }}

      - id: module
        env:
            modules: ${{ secrets.KAOS_CORE_MODULES }}
            files: ${{ secrets.KAOS_CORE_FILES }}
        run: |
          # Nuevo proceso de activacion de los modulos
          while IFS= read -r line; do
            echo "I Leemos el fichero ${{ github.event.inputs.kaos-involved-file }} y extraemos el fichero $line"
            module_failed=0
            extension_failed=0
            file_name=$(basename "$line")
            echo "I-1 Calculamos el nombre del fichero $file_name"
            file_extension="${file_name##*.}"
            echo "I-2 Calculamos la extension del fichero $file_extension"
            file_module="$file_extension""lint.yaml"
            echo "I-3 Calculamos el modulo $file_module"
            IFS=',' read -r -a file_array <<< "$files"
            for file in "${file_array[@]}"; do
              echo "II Leemos el array de $file"
              if [[ "$file_extension" == "$file" ]]; then
                echo "III Comprobamos si $file_extension es igual a $file"
                IFS=',' read -r -a module_array <<< "$modules"
                for module in "${module_array[@]}"; do
                  echo "IV Leemos el array $module"
                  if [[ "$file_module" == *"$module"* ]]; then
                    echo "V Comprobamos que el $file_module es igual a $module y ejecutamos el flujo"
                    # Si hemos llegado hasta aquí ejecutamos el módulo
                    # Añadimos los valores a las variables de la issue
                    KAOS_ISSUE_BODY="${{ env.KAOS_MODULE }} has been initiated and Launch workflow $file_module to check file $line"
                    # Añadimos el comentario a la issue
                    gh workflow run issue.yaml --ref ${{ github.ref }} -f kaos-issue-body="$KAOS_ISSUE_BODY" -f kaos-issue-id=${{ github.event.inputs.kaos-issue-id }} -f kaos-issue-actions=comment
                    # Lanzamos el lint del fichero
                    gh workflow run $file_module --ref ${{ github.ref }} -f kaos-origin=${{ github.run_id }} -f kaos-files=$line -f kaos-issue-id=${{ github.event.inputs.kaos-issue-id }}
                    module_failed=0
                    extension_failed=0
                    break
                  else
                    # Control de si existe el modulo para esa extension"
                    echo "VI No es igual $file_module a $module y lo indicamos en la variable module_failed=1"
                    module_failed=1
                  fi
                done
                break
              else
                # Control de si existe el modulo para esa extension"
                echo "VII No es igual $file_extension a $file y lo indicamos en la variable extension_failed=1"
                extension_failed=1
              fi  
            done
            if [[ $module_failed == 1 ]]; then
              echo "IX Si el modulo falla ($module_failed) añadimos el comentario a la issue"
              # Si hemos llegado hasta aquí añadimos el mensaje de que la extension esta permitida pero no dispone de modulo activo y aqui finaliza el proceso
              # Añadimos los valores a las variables de la issue
              KAOS_ISSUE_BODY="${{ env.KAOS_MODULE }} ha detectado que la extensión ($file_extension) esta permitida dentro de KAOS_CORE_FILES, pero el módulo asociado ($file_module) no esta activo. Por favor compruebe que exista y esta activo."
              # Añadimos el comentario a la issue
              gh workflow run issue.yaml --ref ${{ github.ref }} -f kaos-issue-body="$KAOS_ISSUE_BODY" -f kaos-issue-id=${{ github.event.inputs.kaos-issue-id }} -f kaos-issue-actions=comment
            fi
            if [[ $extension_failed == 1 ]]; then
              echo "X Si extension falla falla ($extension_failed) añadimos el comentario a la issue"
              # Si hemos llegado hasta aquí añadimos el mensaje de que la extension no esta permitida
              # Añadimos los valores a las variables de la issue
              KAOS_ISSUE_BODY="${{ env.KAOS_MODULE }} ha detectado que la extensión ($file_extension) NO esta permitida dentro de KAOS_CORE_FILES. Por favor compruebe que exista y esta activo."
              # Añadimos el comentario a la issue
              gh workflow run issue.yaml --ref ${{ github.ref }} -f kaos-issue-body="$KAOS_ISSUE_BODY" -f kaos-issue-id=${{ github.event.inputs.kaos-issue-id }} -f kaos-issue-actions=comment
            fi  
          done < ${{ github.event.inputs.kaos-involved-file }}

      - id: message
        run: |
          KAOS_ISSUE_BODY="${{ env.KAOS_MODULE }} ha terminado de comprobar kaos-init-process"
          gh workflow run issue.yaml --ref ${{ github.ref }} -f kaos-issue-body="$KAOS_ISSUE_BODY" -f kaos-issue-id=${{ github.event.inputs.kaos-issue-id }} -f kaos-issue-actions=comment

  handle_failure:
    runs-on: 
      group: kaos-init
    needs: [kaos-init-process]
    if: ${{ failure() }}
    steps:
      - id: check-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_TOKEN }}
        run: |
          echo "Error detected in ${{ env.KAOS_MODULE }}, creating issue..."
          KAOS_ISSUE_TITLE="${{ env.KAOS_MODULE }} Action Failed: ${{ github.workflow }}"
          KAOS_ISSUE_BODY=$(cat <<'EOF'
          An error occurred in the ${{ env.KAOS_MODULE }} Action workflow **${{ github.workflow }}**.
          **${{ env.KAOS_MODULE }}  Message:**
          El error ha sido en : ${{  github.run_id }}
          ejecute este comando en su consola y podrá consultar el fallo del trabajo
          gh run view ${{  github.run_id }} --log-failed
          \`\`\`
          **Please check the job logs for ${{ secrets.KAOS_ACTIONS_URL }}${{ github.run_id }}**
          \`\`\`
          **Workflow Name:** ${{ github.workflow }}
          **Job Name:** ${{ github.job }}
          **Run ID:** ${{ github.run_id }}
          **Run Number:** ${{ github.run_number }}
          **Repository:** ${{ github.repository }}
          **Branch:** ${{ github.ref }}
          **Commit:** ${{ github.sha }}
          Please investigate the issue.
          EOF
          )
          gh workflow run issue.yaml --ref ${{ github.ref }} -f kaos-issue-title="$KAOS_ISSUE_TITLE" -f kaos-issue-body="$KAOS_ISSUE_BODY" -f kaos-issue-actions=create -f kaos-issue-tag="bug"   
