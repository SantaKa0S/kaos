name: Ka0s Summary

on:
    workflow_dispatch:
    schedule:
      - cron: '0 0 * * *' # Ejecutar diariamente a medianoche

permissions:
  contents: write
  actions: write
  issues: write
  pull-requests: write

env:
  GH_TOKEN: ${{ secrets.KAOS_TOKEN }}
  KAOS_MODULE: "[Ka0S] SUMMARY"
  GH_REPO: ${{ secrets.KAOS_REPO }}
  PATH_RESUME: "config/results/"
  KAOS_CODE: ${{ github.run_id }}

jobs:
  kaos-summary:
    runs-on: kaos-self-hosted

    steps:
      - id: repo # Checkout the repository to get the information of the commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_TOKEN }}

      - id: summary-issue-log
        run: |

            #  Extraemos toda la información de las issues haste el momento
            touch ${{ env.PATH_RESUME }}issue-log-${{ env.KAOS_CODE }}.json
            gh issue list --repo ${{ env.GH_REPO }} --state all --json assignees,author,body,closed,closedAt,comments,createdAt,id,labels,milestone,number,projectCards,projectItems,reactionGroups,state,title,updatedAt,url > ${{ env.PATH_RESUME }}issue-log-${{ env.KAOS_CODE }}.json
            # Formatear el archivo JSON final
            cat ${{ env.PATH_RESUME }}issue-log-${{ env.KAOS_CODE }}.json | jq -s '.' > ${{ env.PATH_RESUME }}kaos-issue-log.json

      - id: summary-workflows-log
        run: |
          # Añadimos la información de todos los workflows y sus datos
          # Generamos el fichero con los workflows disponibles en el repo
          gh workflow list --all --json id,name,path,state > ${{ env.PATH_RESUME }}workflows-available-${{ env.KAOS_CODE }}.json
          # Formatear el archivo JSON final
          cat ${{ env.PATH_RESUME }}workflows-available-${{ env.KAOS_CODE }}.json | jq -s '.' > ${{ env.PATH_RESUME }}kaos-workflows-available.json
          # job_id=$(gh run list --workflow=$workflow --branch=main --json databaseId --jq '.[0].databaseId')
          # gh workflow run issue.yaml --ref main -f kaos-issue-title=$KAOS_ISSUE_TITLE -f kaos-issue-body="Launch workflow $workflow with id $job_id" -f kaos-issue-id=$GH_ISSUE_ID
          # A continuación extraemos el fichero con todas las ejecuciones de cada uno de los workflows anteriores
          # Leer el archivo de workflows
          workflows=$(cat ${{ env.PATH_RESUME }}kaos-workflows-available.json | jq -r '.[] | .[] | .id')  
          # Crear un archivo para guardar los detalles de las ejecuciones
          echo "[]" > ${{ env.PATH_RESUME }}workflows-runs-${{ env.KAOS_CODE }}.json
          # Iterar sobre cada workflow y obtener sus ejecuciones
          for workflow_id in $workflows; do
          gh api repos/:owner/:repo/actions/workflows/$workflow_id/runs --paginate --jq '.workflow_runs[]' | jq '{
            id: .id,
            name: .name,
            head_branch: .head_branch,
            head_sha: .head_sha,
            run_number: .run_number,
            event: .event,
            status: .status,
            conclusion: .conclusion,
            workflow_id: .workflow_id,
            url: .url,
            created_at: .created_at,
            updated_at: .updated_at,
            run_started_at: .run_started_at
          }' >> ${{ env.PATH_RESUME }}workflows-runs-${{ env.KAOS_CODE }}.json
          done

          # Formatear el archivo JSON final
          cat ${{ env.PATH_RESUME }}workflows-runs-${{ env.KAOS_CODE }}.json | jq -s '.' > ${{ env.PATH_RESUME }}kaos-workflows-runs.json
      
      - id: upload-files-repo
        run: |  
             # Al ser un proceso nocturno le vamos a añadir la funcionalidad de hacer push a la rama para integrar los ficheros
             git config --global user.email ${{ secrets.KAOS_USER_EMAIL }}
             git config --global user.name ${{ secrets.KAOS_USER_NAME }}
             git pull
             git add ${{ env.PATH_RESUME }}*
             git commit -m "[Ka0S] We integrate the summary files for ${{ env.KAOS_CODE }} in the repository, you do not need to integrate these files"
             git push

             # Generamos los ficheros delta de kaos-workflows-runs
             if [[ -f "${{ env.PATH_RESUME }}kaos-workflows-runs-old.json" ]]; then
                 # Comparar con la lista anterior
                 jq -s '.[0] - .[1]' ${{ env.PATH_RESUME }}kaos-workflows-runs.json ${{ env.PATH_RESUME }}kaos-workflows-runs-old.json > ${{ env.PATH_RESUME }}kaos-workflows-runs-delta.json
                 git pull
                 git add ${{ env.PATH_RESUME }}*
                 git commit -m "[Ka0S] We integrate the summary files for ${{ env.KAOS_CODE }} in the repository, you do not need to integrate these files"
                 git push
                 if [[ -s "${{ env.PATH_RESUME }}kaos-workflows-runs-delta.json" ]]; then
                  # LLamamos a splunk
                  gh workflow run splunk.yaml --ref main -f kaos-issue-body-file=${{ env.PATH_RESUME }}kaos-workflows-runs-delta.json -f kaos-issue-id=${{ github.workflow }}
                 else
                  echo "No hay contenido nuevo que subir a splunk"
                fi 
             else
                 cat ${{ env.PATH_RESUME }}kaos-workflows-runs.json > ${{ env.PATH_RESUME }}kaos-workflows-runs-old.json
                 git pull
                 git add ${{ env.PATH_RESUME }}*
                 git commit -m "[Ka0S] We integrate the summary files for ${{ env.KAOS_CODE }} in the repository, you do not need to integrate these files"
                 git push
                 cat ${{ env.PATH_RESUME }}kaos-workflows-runs-old.json > ${{ env.PATH_RESUME }}kaos-workflows-runs-delta.json
                 git pull
                 git add ${{ env.PATH_RESUME }}*
                 git commit -m "[Ka0S] We integrate the summary files for ${{ env.KAOS_CODE }} in the repository, you do not need to integrate these files"
                 git push
                 gh workflow run splunk.yaml --ref main -f kaos-issue-body-file=${{ env.PATH_RESUME }}kaos-workflows-runs-delta.json -f kaos-issue-id=${{ github.workflow }}
             fi

             # Generamos los ficheros delta de kaos-workflows-available
             if [[ -f "${{ env.PATH_RESUME }}kaos-workflows-available-old.json" ]]; then
                 # Comparar con la lista anterior
                 jq -s '.[0] - .[1]' ${{ env.PATH_RESUME }}kaos-workflows-available.json ${{ env.PATH_RESUME }}kaos-workflows-available-old.json > ${{ env.PATH_RESUME }}kaos-workflows-available-delta.json
                 git pull
                 git add ${{ env.PATH_RESUME }}*
                 git commit -m "[KA0S] We integrate the summary files for ${{ env.KAOS_CODE }} in the repository, you do not need to integrate these files"
                 git push
                 if [[ -s "${{ env.PATH_RESUME }}kaos-workflows-available-delta.json" ]]; then
                  # LLamamos a splunk
                  gh workflow run splunk.yaml --ref main -f kaos-issue-body-file=${{ env.PATH_RESUME }}kaos-workflows-available-delta.json -f kaos-issue-id=${{ github.workflow }}
                 else
                  echo "No hay contenido nuevo que subir a splunk"
                fi 
             else
                 cat ${{ env.PATH_RESUME }}kaos-workflows-available.json > ${{ env.PATH_RESUME }}kaos-workflows-available-old.json
                 git pull
                 git add ${{ env.PATH_RESUME }}*
                 git commit -m "[KA0S] We integrate the summary files for ${{ env.KAOS_CODE }} in the repository, you do not need to integrate these files"
                 git push
                 cat ${{ env.PATH_RESUME }}kaos-workflows-available-old.json > ${{ env.PATH_RESUME }}kaos-workflows-available-delta.json
                 git pull
                 git add ${{ env.PATH_RESUME }}*
                 git commit -m "[KA0S] We integrate the summary files for ${{ env.KAOS_CODE }} in the repository, you do not need to integrate these files"
                 git push
                 gh workflow run splunk.yaml --ref main -f kaos-issue-body-file=${{ env.PATH_RESUME }}kaos-workflows-available-delta.json -f kaos-issue-id=${{ github.workflow }}
             fi
             

             # Generamos los ficheros delta de kaos-issue-log
             if [[ -f "${{ env.PATH_RESUME }}kaos-issue-log-old.json" ]]; then
                 # Comparar con la lista anterior
                 jq -s '.[0] - .[1]' ${{ env.PATH_RESUME }}kaos-issue-log.json ${{ env.PATH_RESUME }}kaos-issue-log-old.json > ${{ env.PATH_RESUME }}kaos-issue-log-delta.json
                 git pull
                 git add ${{ env.PATH_RESUME }}*
                 git commit -m "[KA0S] We integrate the summary files for ${{ env.KAOS_CODE }} in the repository, you do not need to integrate these files"
                 git push
                 if [[ -s "${{ env.PATH_RESUME }}kaos-issue-log-delta.json" ]]; then
                  # LLamamos a splunk
                  gh workflow run splunk.yaml --ref main -f kaos-issue-body-file=${{ env.PATH_RESUME }}kaos-issue-log-delta.json -f kaos-issue-id=${{ github.workflow }}
                 else
                  echo "No hay contenido nuevo que subir a splunk"
                fi 
             else
                 cat ${{ env.PATH_RESUME }}kaos-issue-log.json > ${{ env.PATH_RESUME }}kaos-issue-log-old.json
                 git pull
                 git add ${{ env.PATH_RESUME }}*
                 git commit -m "[KA0S] We integrate the summary files for ${{ env.KAOS_CODE }} in the repository, you do not need to integrate these files"
                 git push
                 cat ${{ env.PATH_RESUME }}kaos-issue-log-old.json > ${{ env.PATH_RESUME }}kaos-issue-log-delta.json
                 git pull
                 git add ${{ env.PATH_RESUME }}*
                 git commit -m "[KA0S] We integrate the summary files for ${{ env.KAOS_CODE }} in the repository, you do not need to integrate these files"
                 git push
                 gh workflow run splunk.yaml --ref main -f kaos-issue-body-file=${{ env.PATH_RESUME }}kaos-issue-log-delta.json -f kaos-issue-id=${{ github.workflow }}
             fi

      - id: upload-file-repo
        uses: actions/upload-artifact@v4
        with:
          name: reports-summary-files
          path: |
            ${{ env.PATH_RESUME }}kaos-issue-log-delta.json
            ${{ env.PATH_RESUME }}kaos-workflows-runs-delta.json
            ${{ env.PATH_RESUME }}kaos-workflows-available--delta.json
      
  handle_failure:
    runs-on: 
      group: kaos-test
    needs: [kaos-summary]
    if: ${{ failure() }}
    steps:
      - id: check-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_TOKEN }}
        run: |
          echo "Error detected in Ka0S, creating issue..."
          KAOS_ISSUE_TITLE="Ka0S Action Failed: ${{ github.workflow }}"
          KAOS_ISSUE_BODY=$(cat <<'EOF'
          An error occurred in the Ka0S Action workflow **${{ github.workflow }}**.
          **${{ env.KAOS_MODULE }}  Message:**
          \`\`\`
          **Please check the job logs for ${{ secrets.KAOS_ACTIONS_URL }}${{ github.run_id }}**
          \`\`\`
          **Workflow Name:** ${{ github.workflow }}
          **Job Name:** ${{ github.job }}
          **Run ID:** ${{ github.run_id }}
          **Run Number:** ${{ github.run_number }}
          **Repository:** ${{ github.repository }}
          **Branch:** ${{ github.ref }}
          **Commit:** ${{ github.sha }}
          Please investigate the issue.
          EOF
          )
          gh workflow run issue.yaml --ref ${{ github.ref }} -f kaos-issue-title="$KAOS_ISSUE_TITLE" -f kaos-issue-body="$KAOS_ISSUE_BODY" -f kaos-issue-actions=create -f kaos-issue-tag="bug"   
          