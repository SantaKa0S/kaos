name: Ka0S Version

on:
  pull_request:
    types: [opened]
    branches:
      - 'main'

permissions:
  contents: write
  actions: write
  issues: write
env:
  KAOS_MODULE: "[Ka0S]  VERSION"
  KAOS_REF: ${{ github.ref }}
  GH_TOKEN: ${{ secrets.KAOS_TOKEN }}
  PATH_RESUME: "core/config/"
  GH_VERSION: ""
jobs:
  kaos-version:
    if: github.event.pull_request.state == 'open'
    runs-on: 
      group: kaos-test
    outputs:
      KAOS_BRANCH: ${{ steps.commit_details.outputs.RNBRANCH }}
      KAOS_NUMBER: ${{ steps.commit_details.outputs.RNNUMBER }}
      KAOS_CODE: ${{ steps.commit_details.outputs.RNCODE }}
      KAOS_VERSION: ${{ steps.version.outputs.VERSION }}
      KAOS_FILES: ${{ steps.changed_files.outputs.CHANGED_FILES }}
    steps:
    - id: repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Clonar todo el historial 
        token: ${{ secrets.KAOS_TOKEN }}

    - id: commit_details
      run: |
        echo "GH_VERSION=$(gh api repos/:owner/:repo/git/matching-refs/tags --jq '.[-1].ref' | sed 's|refs/tags/||')" >> $GITHUB_ENV
        echo "AUTHOR_NAME=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
        echo "AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')" >> $GITHUB_OUTPUT
        echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_OUTPUT
        RNBRANCH=$(echo "${{ github.event.pull_request.title }}" | grep -o '^[A-Za-z]*')
        RNNUMBER=$(echo "${{ github.event.pull_request.title }}" | grep -o '[0-9]*')
        echo "Extracted RN Branch: $RNBRANCH"
        echo "Extracted RN Number: $RNNUMBER"
        echo "RNCODE=$(echo "$RNBRANCH-$RNNUMBER" >> $GITHUB_OUTPUT
        echo "La variable de KAOS_CODE es $RNCODE"
        echo "RNBRANCH=$RNBRANCH" >> $GITHUB_OUTPUT
        echo "RNNUMBER=$RNNUMBER" >> $GITHUB_OUTPUT 

    - id: version
      run: |
        if [ ! -f ${{ env.GH_VERSION }} ]; then echo "0.0.0" > version.txt; fi
        VERSION=${{ env.GH_VERSION }}
        IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
        if [[ "${{ steps.commit_details.outputs.RNBRANCH }}" =~ (H) ]]; then
          PATCH=$((PATCH + 1))
        elif [[ "${{ steps.commit_details.outputs.RNBRANCH }}" =~ (F) ]]; then
          MINOR=$((MINOR + 1))
          PATCH=0
        elif [[ "${{ steps.commit_details.outputs.RNBRANCH }}" =~ (RN) ]]; then
          MAJOR=$((MAJOR + 1))
          MINOR=0
          PATCH=0
        fi
        
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo "VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "GH_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - id: changed_files
      run: |
        CHANGED_FILES=$(git diff --name-only HEAD~1 | tr '\n' ' ')
        echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_OUTPUT

    - id: changelog
      env:
        VERSION: ${{ steps.version.outputs.VERSION }}
        CHANGE_FILES: ${{ steps.changed_files.outputs.CHANGED_FILES }}
        NAME:  ${{ steps.commit_details.outputs.AUTHOR_NAME }}
        EMAIL: ${{ steps.commit_details.outputs.AUTHOR_EMAIL }}
        MESSAGE: ${{ steps.commit_details.outputs.COMMIT_MESSAGE }}
      run: |
        echo "## Version ${{ env.VERSION }}" >> CHANGELOG.md
        echo "- **Branch**: ${{ github.ref }}" >> CHANGELOG.md
        echo "- **Commit**: ${{ github.sha }}" >> CHANGELOG.md
        echo "- **Author**: ${{ env.NAME }} (${{ env.EMAIL }})" >> CHANGELOG.md
        echo "- **Date**: $(date -u)" >> CHANGELOG.md
        echo "- **Message**: ${{ env.MESSAGE }}" >> CHANGELOG.md
        echo "- **Files Changed**:" >> CHANGELOG.md
        for file in ${{ env.CHANGE_FILES }}; do echo "  - $file" >> CHANGELOG.md; done
        echo "---------------------------------" >> CHANGELOG.md

    - id: push-log-tag-index
      env:
        USER_NAME: ${{ secrets.KAOS_USER_NAME }}
        USER_EMAIL: ${{ secrets.KAOS_USER_EMAIL }}
        GITHUB_TOKEN: ${{ secrets.KAOS_TOKEN }}
      run: |
        git config --global user.name '${{ env.USER_NAME }}'
        git config --global user.email '${{ env.USER_EMAIL}}'
        if [ ! -f INDEX.md ]; then echo "# Version Index" > INDEX.md; fi
        echo "- **Version**: ${{ steps.version.outputs.VERSION }} - **Description**: ${{ steps.commit_details.outputs.COMMIT_MESSAGE }}" >> INDEX.md
        git tag -a "${{ steps.version.outputs.VERSION }}" -m "${{ env.KAOS_MODULE }} NEW Ka0S version ${{ steps.version.outputs.VERSION }}"
        git add CHANGELOG.md
        git commit -m "${{ env.KAOS_MODULE }} Upload: CHANGELOG.md with new version log entry"
        git add INDEX.md
        git commit -m "${{ env.KAOS_MODULE }}  Upload: INDEX.md with version ${{ steps.version.outputs.VERSION }}"
        git push origin "${{ steps.version.outputs.VERSION }}"

    - id: failure-delete-tag
      if: ${{ failure() }}
      run: |
        # Antes de nada borramos el tag asignado en el paso anterior
        git push origin --delete "${{ steps.version.outputs.VERSION }}"
        KAOS_ISSUE_BODY="Sentimos comunicarle que no se cumplen los requerimientos, por favor revise los checks"
        gh workflow run issue.yaml --ref main -f kaos-issue-id="${{ github.event.pull_request.number }}" -f kaos-issue-body="$KAOS_ISSUE_BODY" -f kaos-issue-actions=comment
    
    - id: comment-pull-request
      if:  ${{ success() }} 
      run: |
        # A침adimos el comentario a la pull request de que todo ha ido correcto y de cual es la nueva version generada
        KAOS_ISSUE_BODY="${{ env.KAOS_MODULE }} ha generado una nueva versi칩n con el tag v${{ steps.version.outputs.VERSION }}. Esto todo dispuesto para realizar FUSIONAR el c칩digo."
        gh workflow run issue.yaml --ref main -f kaos-issue-id="${{ github.event.pull_request.number }}" -f kaos-issue-body="$KAOS_ISSUE_BODY" -f kaos-issue-actions=comment

  handle_failure:
    runs-on: 
      group: kaos-test
    needs: [kaos-version]
    if: ${{ failure() }}
    steps:
      - id: check-execution
        run: |
          echo "Error detected in ${{ env.KAOS_MODULE }}, creating issue..."
          KAOS_ISSUE_TITLE="${{ env.KAOS_MODULE }} Action Failed: ${{ github.workflow }}"
          KAOS_ISSUE_BODY=$(cat <<'EOF'
          An error occurred in the ${{ env.KAOS_MODULE }} when create new tag. Action workflow **${{ github.workflow }}**.
          **${{ env.KAOS_MODULE }}  Message:**
          El error ha sido en : ${{  github.run_id }}
          ejecute este comando en su consola y podr치 consultar el fallo del trabajo
          gh run view ${{  github.run_id }} --log-failed
          \`\`\`
          **Please check the job logs for ${{ secrets.KAOS_ACTIONS_URL }}${{ github.run_id }}**
          \`\`\`
          **Workflow Name:** ${{ github.workflow }}
          **Job Name:** ${{ github.job }}
          **Run ID:** ${{ github.run_id }}
          **Run Number:** ${{ github.run_number }}
          **Repository:** ${{ github.repository }}
          **Branch:** ${{ github.ref }}
          **Commit:** ${{ github.sha }}
          Please investigate the issue.
          EOF
          )
          gh workflow run issue.yaml --ref main -f kaos-issue-title="$KAOS_ISSUE_TITLE" -f kaos-issue-body="$KAOS_ISSUE_BODY" -f kaos-issue-actions=create -f kaos-issue-tag="bug"   
                